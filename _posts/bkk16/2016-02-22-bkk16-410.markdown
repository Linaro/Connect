---
amazon_s3_presentation_url: https://static.linaro.org/connect/bkk16/Presentations/Thursday/BKK16-410.pdf
author: connect
categories: bkk16
comments: false
date: 2016-02-22 17:20:54
excerpt: 'The linux kernel has two distinct ways of managing idle. The CPUidle framework
  for CPUs and for all other devices: runtime PM combined with generic power domains
  (genpd). In addition, CPUidle is not scaling well for multi-cluster SMP systems
  and heterogeneous systems like big.LITTLE. To better manage idle for modern SoCs
  with a hierarchical structure, we are exploring extending runtime PM and genpd to
  CPUs so there is a unified framework for managing idle across all devices.'
featured_image_name: BKK16-410.jpg
image: /assets/images/featured-images/BKK16-410.jpg
layout: resource-post
link: http://connect.linaro.org/resource/bkk16/bkk16-410/
post_format:
- Video
session_id: BKK16-410
session_track: Power Management
slideshare_embed_url: //www.slideshare.net/slideshow/embed_code/58208874
slideshare_presentation_url: http://www.slideshare.net/linaroorg/bkk16410-soc-idling-cpu-cluster-pm
slug: bkk16-410
speakers: Ulf Hansson
tags:
- CPUidle "runtime PM"
title: 'BKK16-410: SoC Idling & CPU Cluster PM'
video_length: 00:00
video_thumbnail: None
wordpress_id: 3376
---

The linux kernel has two distinct ways of managing idle. The CPUidle framework for CPUs and for all other devices: runtime PM combined with generic power domains (genpd). In addition, CPUidle is not scaling well for multi-cluster SMP systems and heterogeneous systems like big.LITTLE. To better manage idle for modern SoCs with a hierarchical structure, we are exploring extending runtime PM and genpd to CPUs so there is a unified framework for managing idle across all devices.

Event Date:Â March 10, 2016
