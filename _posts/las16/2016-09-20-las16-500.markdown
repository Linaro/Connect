---
amazon_s3_presentation_url: https://static.linaro.org/connect/las16/Presentations/Friday/LAS16-500%20-%20The%20Rise%20and%20Fall%20of%20Assembler%20and%20the%20VGIC%20from%20Hell.pdf
amazon_s3_video_url: https://static.linaro.org/connect/las16/Videos/Friday/LAS16-500%20The%20Rise%20and%20Fall%20of%20Assembler%20and%20the%20VGIC%20from%20Hell.mp4
author: connect
categories:
- las16
comments: false
date: 2016-09-20 17:11:00
excerpt: 'KVM/Arm has grown up. While the initial implementation of virtualization
  support for Arm processors in Linux was a quality upstream software project, there
  were initial design decisions simply not suitable for a long-term maintained hypervisor
  code base. For example, the way KVM/Arm utilized the hardware support for virtualization,
  was by running a ''switching'' layer of code in EL2, purely written in assembly.
  This was a reasonable design decision in the initial implementation, as the switching
  layer only had to do one thing: Switch between a VM and the host. But as we began
  to optimize the implementation, add support for Armv8.1 and VHE, and added features
  such as debugging support, we had to move to a more integrated approach, writing
  the switching logic in C code as well. As another example, the support for virtual
  interrupts, famously known as the VGIC, was designed with a focus on optimizing
  MMIO operations. As it turns out, MMIO operations is a less important and infrequent
  operation on the GIC, and the design had some serious negative consequences for
  supporting other state transitions for virtual interrupts and had negative performance
  implications. Therefore, we completely redesigned the VGIC support, and implemented
  the whole thing from scratch as a team effort, with a very promising result, upstream
  since Linux v4.7. In this talk we will cover the evolution of this software project
  and give an overview of the state of the project as it is today.'
featured_image_name: LAS16-500.png
image_name: LAS16-500.png
image: /assets/images/featured-images/LAS16-500.png
layout: resource-post
link: http://connect.linaro.org/resource/las16/las16-500/
post_format:
- Video
session_id: LAS16-500
session_track: Linux Kernel
slideshare_embed_url: //www.slideshare.net/slideshow/embed_code/66358088
slideshare_presentation_url: http://www.slideshare.net/linaroorg/las16500-the-rise-and-fall-of-assembler-and-the-vgic-from-hell
slug: las16-500
speakers: Marc Zyngier, Christoffer Dall
tags:
- Virtualization
title: 'LAS16-500: The Rise and Fall of Assembler and the VGIC from Hell'
video_length: 00:00
video_thumbnail: None
wordpress_id: 3857
youtube_video_url: https://youtu.be/_o6gb-8UYXc
---

LAS16-500: The Rise and Fall of Assembler and the VGIC from Hell
Speakers: Marc Zyngier, Christoffer Dall
Date: September 30, 2016

★ Session Description ★
KVM/Arm has grown up. While the initial implementation of virtualization support for Arm processors in Linux was a quality upstream software project, there were initial design decisions simply not suitable for a long-term maintained hypervisor code base. For example, the way KVM/Arm utilized the hardware support for virtualization, was by running a ‘switching’ layer of code in EL2, purely written in assembly. This was a reasonable design decision in the initial implementation, as the switching layer only had to do one thing: Switch between a VM and the host. But as we began to optimize the implementation, add support for Armv8.1 and VHE, and added features such as debugging support, we had to move to a more integrated approach, writing the switching logic in C code as well. As another example, the support for virtual interrupts, famously known as the VGIC, was designed with a focus on optimizing MMIO operations. As it turns out, MMIO operations is a less important and infrequent operation on the GIC, and the design had some serious negative consequences for supporting other state transitions for virtual interrupts and had negative performance implications. Therefore, we completely redesigned the VGIC support, and implemented the whole thing from scratch as a team effort, with a very promising result, upstream since Linux v4.7. In this talk we will cover the evolution of this software project and give an overview of the state of the project as it is today.

★ Resources ★
Etherpad: pad.linaro.org/p/las16-500
Presentations & Videos: [http://connect.linaro.org/resource/las16/las16-500/](/resources/las16/las16-500/)

★ Event Details ★
Linaro Connect Las Vegas 2016 – #LAS16
September 26-30, 2016
[http://www.linaro.org](http://www.linaro.org/)
[http://connect.linaro.org](/)